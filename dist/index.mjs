import{InputRule as c,Node as m,mergeAttributes as u}from"@tiptap/core";import{Plugin as d,PluginKey as l}from"@tiptap/pm/state";var s=/https:\/\/[\w\.-]+\.?figma.com\/([\w-]+)\/([0-9a-zA-Z]{22,128})(?:\/.*)?$/,i=t=>{let e=new URL("https://www.figma.com/embed");return e.searchParams.set("embed_host","tiptap"),e.searchParams.set("embed_origin",window.location.origin),e.searchParams.set("url",t),e.toString()},f=m.create({name:"figma",group:"block",atom:!0,addCommands(){return{setFigma:t=>({commands:e})=>e.insertContent({type:this.name,attrs:t}),unsetFigma:()=>({commands:t})=>t.deleteRange({from:0,to:-1})}},addAttributes(){return{src:{default:null}}},parseHTML(){return[{tag:'iframe[src*="figma.com"]'}]},renderHTML({HTMLAttributes:t}){return["iframe",u(this.options.HTMLAttributes,t,{width:"800",height:"450",allowfullscreen:"true"})]},addInputRules(){return[new c({find:s,handler:({match:t,commands:e})=>{let r=t[0],a=i(r);e.setFigma({src:a})}})]},addProseMirrorPlugins(){return[new d({key:new l("figmaEmbedPlugin"),props:{handlePaste:(t,e)=>{var a;let r=(a=e.clipboardData)==null?void 0:a.getData("text/plain");if(r&&s.test(r)){let n=i(r);return t.dispatch(t.state.tr.replaceSelectionWith(this.type.create({src:n}))),!0}return!1},handleDOMEvents:{drop:(t,e)=>{var a;let r=(a=e.dataTransfer)==null?void 0:a.getData("text/plain");if(r&&s.test(r)){let n=i(r),o=t.posAtCoords({left:e.clientX,top:e.clientY});if(o)return t.dispatch(t.state.tr.insert(o.pos,this.type.create({src:n}))),!0}return!1}}}})]}});export{f as Figma};
